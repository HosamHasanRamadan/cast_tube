<manifest
		xmlns:android="http://schemas.android.com/apk/res/android"
		xmlns:tools="http://schemas.android.com/tools"
		package="com.casttube.cast_tube">
	<uses-permission android:name="android.permission.INTERNET" />
	<!-- Just Audio -->
	<!-- Background Play -->
	<uses-permission android:name="android.permission.WAKE_LOCK" />
	<uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
	<!-- Just Audio End-->

	<application
			android:label="cast_tube"
			android:name="${applicationName}"
			android:icon="@mipmap/ic_launcher">

		<!-- Just Audio -->
		<!-- android:name=".MainActivity" -->
		<!-- Just Audio End -->
		<activity
				android:name="com.ryanheise.audioservice.AudioServiceActivity"
				android:exported="true"
				android:launchMode="singleTop"
				android:theme="@style/LaunchTheme"
				android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
				android:hardwareAccelerated="true"
				android:windowSoftInputMode="adjustResize">
			<!--
			Specifies an Android theme to apply to this Activity as soon as
			the Android process has started. This theme is visible to the user
			while the Flutter UI initializes. After that, this theme continues
			to determine the Window background behind the Flutter UI.
			-->
			<meta-data
					android:name="io.flutter.embedding.android.NormalTheme"
					android:resource="@style/NormalTheme" />
			<intent-filter>
				<action android:name="android.intent.action.MAIN" />
				<category android:name="android.intent.category.LAUNCHER" />
			</intent-filter>

			<!-- Share Handler -->
			<intent-filter>
				<action android:name="android.intent.action.SEND" />
				<category android:name="android.intent.category.DEFAULT" />
				<data android:mimeType="text/*" />
			</intent-filter>
			<!-- Share Handler End -->

		</activity>


		<!-- Just Audio -->
		<!-- Just Audio Background Service -->
		<service
				android:name="com.ryanheise.audioservice.AudioService"
				android:foregroundServiceType="mediaPlayback"
				android:exported="true"
				tools:ignore="Instantiatable">
			<intent-filter>
				<action android:name="android.media.browse.MediaBrowserService" />
			</intent-filter>
		</service>

		<receiver
				android:name="com.ryanheise.audioservice.MediaButtonReceiver"
				android:exported="true"
				tools:ignore="Instantiatable">
			<intent-filter>
				<action android:name="android.intent.action.MEDIA_BUTTON" />
			</intent-filter>
		</receiver>
		<!-- Just Audio End-->

		<!--
		Don't delete the meta-data below.
		This is used by the Flutter tool to generate GeneratedPluginRegistrant.java
		-->
		<meta-data
				android:name="flutterEmbedding"
				android:value="2" />
	</application>
</manifest>